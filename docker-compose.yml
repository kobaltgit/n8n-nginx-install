# ===============================================================
# ИЗМЕНЕННЫЙ ФАЙЛ docker-compose.yml (БЕЗ TRAEFIK)
# ===============================================================
version: "3.9"

services:
  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    container_name: n8n-app
    restart: always
    ports:
      # Мы "выставляем" порт 5678 из контейнера наружу на тот же порт 5678 хост-машины.
      # Nginx будет обращаться к нему по адресу localhost:5678
      - "127.0.0.1:5678:5678"
    mem_limit: 2048m
    mem_reservation: 1024m
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Важно: эти переменные говорят n8n доверять прокси-серверу (нашему Nginx)
      - N8N_EXPRESS_TRUST_PROXY=true
      - N8N_TRUSTED_PROXIES=*
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - WEBHOOK_URL=https://${DOMAIN}/
      - GENERIC_TIMEZONE=Asia/Yekaterinburg
      - NODE_ENV=production
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_DEFAULT_BINARY_DATA_MODE=${N8N_DEFAULT_BINARY_DATA_MODE}
      - N8N_BINARY_DATA_MODE=${N8N_BINARY_DATA_MODE}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./data:/data
    depends_on:
      - n8n-postgres
    # --- УБРАНЫ ВСЕ LABELS ДЛЯ TRAEFIK ---

  n8n-postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data

  n8n-redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: always
    volumes:
      - redis_data:/data

  # --- СЕРВИС n8n-traefik ПОЛНОСТЬЮ УДАЛЕН ---

  n8n-bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: n8n-bot
    restart: always
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_USER_ID=${TG_USER_ID}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backup_n8n.sh:/opt/n8n-install/backup_n8n.sh
      - ./backups:/opt/n8n-install/backups
      - ./.env:/opt/n8n-install/.env
    # --- УБРАН LABEL ДЛЯ TRAEFIK ---

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  # --- УБРАН ТОМ ДЛЯ TRAEFIK ---
